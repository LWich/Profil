version: '3.8'

volumes:
  db:

networks:
  common:

configs:
  nginx:
    file: default.conf

services:
  database:
    image: postgres
    container_name: postgres_container
    restart: always
    user: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", '-U', "userdb", "-d", "profildb"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - common
    volumes:
      - db:/var/lib/postgresql/data

  app:
    stdin_open: true
    container_name: app_container
    restart: always
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend:/app/frontend
    networks:
      - common
    
  backend:
    container_name: backend_container
    restart: always
    environment:
      DB_HOST: database
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DEBUG: 0
    build: 
      context: ../profil
      dockerfile: Dockerfile
    volumes:
      - ../profil:/app/profil
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000"
    ports:
      - '8000:8000'
    networks:
      - common
    depends_on:
      - database

  nginx:
    image: nginx:1.24.0
    depends_on:
      - app
      - backend
    configs:
      - source: nginx
        target: "/etc/nginx/conf.d/default.conf"
    networks:
      - common
    ports:
      - "80:80"
      - "443:443"
    environment:
      NGINX_ENTRYPOINT_QUIET_LOGS: 1